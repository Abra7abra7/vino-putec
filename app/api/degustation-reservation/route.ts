import { NextRequest, NextResponse } from 'next/server';
import { Resend } from 'resend';

const resend = new Resend(process.env.RESEND_API_KEY);

interface ReservationData {
  name: string;
  email: string;
  phone: string;
  date: string;
  time: string;
  guests: number;
  message: string;
  productTitle: string;
  productPrice: string;
  productDeposit?: string;
}

export async function POST(req: NextRequest) {
  try {
    const body: ReservationData = await req.json();

    // Basic validation
    if (!body.name || !body.email || !body.phone || !body.date || !body.time || !body.guests) {
      return NextResponse.json({ error: "Ch√Ωbaj√∫ povinn√© √∫daje" }, { status: 400 });
    }

    // Send admin email
    const adminEmailText = `
Nov√° rezerv√°cia degust√°cie:

Produkt: ${body.productTitle}
Cena: ${body.productPrice}${body.productDeposit ? ` (Z√°loha: ${body.productDeposit})` : ''}

Z√°kazn√≠k:
- Meno: ${body.name}
- Email: ${body.email}
- Telef√≥n: ${body.phone}

Rezerv√°cia:
- D√°tum: ${new Date(body.date).toLocaleDateString('sk-SK')}
- ƒåas: ${body.time}
- Poƒçet os√¥b: ${body.guests}

${body.message ? `Pozn√°mky: ${body.message}` : ''}

Rezerv√°cia vytvoren√°: ${new Date().toLocaleString('sk-SK')}
    `;

    console.log("üìß Sending admin email to:", process.env.ADMIN_EMAIL);
    console.log("üìß From email:", process.env.RESEND_FROM_EMAIL);
    
    const adminResult = await resend.emails.send({
      from: process.env.RESEND_FROM_EMAIL!,
      to: process.env.ADMIN_EMAIL!,
      subject: `üç∑ Nov√° rezerv√°cia degust√°cie od ${body.name}`,
      text: adminEmailText,
    });
    
    console.log("‚úÖ Admin email sent:", adminResult);

    // Send customer email
    const customerEmailText = `
V√°≈æen√Ω/√° ${body.name},

ƒéakujeme za rezerv√°ciu degust√°cie!

Detaily rezerv√°cie:
- Produkt: ${body.productTitle}
- D√°tum: ${new Date(body.date).toLocaleDateString('sk-SK')}
- ƒåas: ${body.time}
- Poƒçet os√¥b: ${body.guests}
- Cena: ${body.productPrice}${body.productDeposit ? ` (Z√°loha: ${body.productDeposit})` : ''}

${body.message ? `Va≈°e pozn√°mky: ${body.message}` : ''}

Kontaktn√© √∫daje:
- Telef√≥n: ${body.phone}
- Email: ${body.email}

V pr√≠pade ot√°zok n√°s kontaktujte na ${process.env.ADMIN_EMAIL}.

Te≈°√≠me sa na v√°s!

S pozdravom,
T√≠m Vino P√∫tec
    `;

    console.log("üìß Sending customer email to:", body.email);
    
    const customerResult = await resend.emails.send({
      from: process.env.RESEND_FROM_EMAIL!,
      to: body.email,
      subject: 'üç∑ Potvrdenie rezerv√°cie degust√°cie - Vino P√∫tec',
      text: customerEmailText,
    });
    
    console.log("‚úÖ Customer email sent:", customerResult);

    return NextResponse.json({ 
      success: true, 
      message: "Rezerv√°cia bola √∫spe≈°ne odoslan√°" 
    });

  } catch (error) {
    console.error('‚ùå Reservation error:', error);
    console.error('‚ùå Error details:', JSON.stringify(error, null, 2));
    return NextResponse.json({ 
      error: "Chyba pri odosielan√≠ rezerv√°cie", 
      details: error instanceof Error ? error.message : 'Unknown error'
    }, { status: 500 });
  }
}

